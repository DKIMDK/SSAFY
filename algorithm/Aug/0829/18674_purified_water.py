'''
화학연구소에서는 오염수를 깨끗한 물로 정화시키는 솔루션을 개발하고 있다.
해당 솔루션의 정화 수치는 1부터 1,000,000,000까지의 양의 정수로 표기하고,오염수의 오염도는  -1부터 -1,000,000,000까지의 음의 정수로 표기하고 있다.
깨끗한 물은 0에 가까운 오염도를 의미한다. 정화 수치가 너무 높으면 인체에 해가 될 수 있기 때문에, 최대한 오염도가 0에 가깝게 정화시켜야 한다.

화학연구소에서 가진 샘플 중 오염수와 솔루션을 하나씩 섞어, 최대한 깨끗한 물에 가깝게 정화하려고 한다.
예를 들어, [-2, 4, -99, -1, 98] 의 샘플이 있다면, -2, -99, -1의 오염도를 지닌 오염수가 있고, 4, 98의 정화 수치를 가진 솔루션이 있다는 것이다.

여기서 -99의 오염수와 98의 솔루션을 섞으면 -1의 오염도를 가진, 가장 깨끗한 물에 가깝게 정화시킬 수 있다.
샘플의 상황에 따라, 오염수 또는 솔루션이 부족할 경우, 오염수끼리, 또는 솔루션끼리 섞어 깨끗한 물에 가깝게 정화시켜야 할 수도 있다.
오염수와 솔루션의 샘플이 주어졌을 때, 두 개의 샘플을 혼합하여 오염도가 0인 깨끗한 물에 가장 가깝게 정화시키는 두 샘플을 찾아내는 프로그램을 작성하시오.

입력
첫번째 줄에는 샘플의 수 N이 입력된다. (2 <= N <= 100,000)
두번째 줄에는 각 샘플의 오염도와 정화 수치를 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -1,000,000,000 이상 1,000,000,000 이하이다.
N개의 샘플의 값들은 모두 다르고, 오염수 또는 솔루션만으로 입력이 주어질 수도 있다.
 
출력
오염도가 0에 가장 가까운 깨끗한 물을 만들어내는 두 샘플의 오염도 또는 정화 수치를 오름차순으로 출력한다.
 오염도를 0으로 정화할 수 있는 오염수와 솔루션의 쌍이 여러개라면, 두 샘플의 수치의 절대값의 합이 가장 큰 것을 출력한다.

'''

N = int(input())
arr = list(map(int, input().split()))
low , high = 0, 0
total = arr[low] + low[high]
while True:
    if total >= 0 or high == N: 
        
    elif abs(total):            
        total += arr[high]
        high += 1
    if total == 0:
        
        break
    if low == N:
        break